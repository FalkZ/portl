name: Github Release

on:
    push:
        branches:
            - main
        # paths:
        #     - "package.json"

jobs:
    check-version-and-release:
        runs-on: ubuntu-latest
        permissions:
            contents: write
        outputs:
            version: ${{ steps.get-version.outputs.version }}
            released: ${{ steps.check-tag.outputs.released }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Get Version
              id: get-version
              run: |
                  VERSION=$(node -p "require('./package.json').version")
                  echo "version=v$VERSION" >> $GITHUB_OUTPUT
                  echo "Current version: v$VERSION"

            - name: Check If Tag Exists
              id: check-tag
              run: |
                  TAG=${{ steps.get-version.outputs.version }}
                  if git tag -l "$TAG" | grep -q "$TAG"; then
                    echo "Tag $TAG already exists, skipping release"
                    echo "released=true" >> $GITHUB_OUTPUT
                  else
                    echo "Tag $TAG does not exist, will create release"
                    echo "released=false" >> $GITHUB_OUTPUT
                  fi

            - name: Create Release
              if: steps.check-tag.outputs.released == 'false'
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ steps.get-version.outputs.version }}
                  release_name: Release ${{ steps.get-version.outputs.version }}
                  draft: false
                  prerelease: false
