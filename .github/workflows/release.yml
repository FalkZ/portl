name: Release

on:
    push:
        branches:
            - main
        paths:
            - package.json

jobs:
    build-and-release:
        runs-on: ubuntu-latest
        permissions:
            contents: write
        outputs:
            version: ${{ steps.get-version.outputs.version }}
            released: ${{ steps.check-tag.outputs.released }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup pnpm
              uses: pnpm/action-setup@v4

            - name: Setup Node LTS
              uses: actions/setup-node@v4
              with:
                  node-version: lts/*
                  registry-url: https://registry.npmjs.org
                  cache: pnpm

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Lint
              run: pnpm lint

            - name: Build
              run: pnpm build

            - name: Get Version
              id: get-version
              run: |
                  VERSION=$(node -p "require('./package.json').version")
                  echo "version=v$VERSION" >> $GITHUB_OUTPUT
                  echo "Current version: v$VERSION"

            - name: Check If Tag Exists
              id: check-tag
              run: |
                  TAG=${{ steps.get-version.outputs.version }}
                  if git tag -l "$TAG" | grep -q "$TAG"; then
                    echo "Tag $TAG already exists, skipping release"
                    echo "released=true" >> $GITHUB_OUTPUT
                  else
                    echo "Tag $TAG does not exist, will create release"
                    echo "released=false" >> $GITHUB_OUTPUT
                  fi

            - name: Create GitHub Release
              if: steps.check-tag.outputs.released == 'false'
              uses: softprops/action-gh-release@v2
              with:
                  tag_name: ${{ steps.get-version.outputs.version }}
                  name: Release ${{ steps.get-version.outputs.version }}
                  draft: false
                  prerelease: false
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Publish to NPM
              if: steps.check-tag.outputs.released == 'false'
              uses: simenandre/publish-with-pnpm@v2
              with:
                  npm-auth-token: ${{ secrets.NPM_TOKEN }}
